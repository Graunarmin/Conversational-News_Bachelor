 <unk> this is my grandfather <unk> salman schocken who was born into a poor and uneducated family with six children to feed <unk> and when he was fourteen years old he was forced to drop out of school in order to help put bread on the table <unk> he never went back to school  instead <unk> he went on to build a glittering empire of department stores <unk>  salman was the consummate perfectionist and every one of his stores <unk> and like everything else he did it in grand style he surrounded himself with an entourage of young unknown scholars like martin buber and shai agnon and franz kafka <unk>  and he paid each one of them a monthly salary so that they could write in peace <unk>  and yet <unk> he fled germany <unk> together with his family leaving everything else behind  his department stores confiscated <unk> he spent the rest of his life in a relentless pursuit of art and culture  this high school dropout died at the age of eighty two a formidable intellectual <unk> cofounder and first ceo of the hebrew university of jerusalem and founder of schocken books an acclaimed imprint that was later acquired by random house such is the power of self study  and these are my parents  they too did not enjoy the privilege of college education <unk> they were too busy building a family and a country <unk> and our home was stacked with thousands of books <unk> records and artwork  i remember quite vividly my father telling me that when everyone in the neighborhood will have a tv set  then we 'll buy a normal f m radio  and that 's me i was going to say holding my first abacus but actually holding what my father would consider an ample substitute to an ipad so one thing that i took from home is this notion that educators don 't necessarily have to teach <unk> instead they can provide an environment and resources that tease out your natural ability to learn on your own <unk> virtues of a great education <unk> so i 'd like to share with you a story about a <unk> computer science course that i built together with my brilliant colleague noam nisan <unk>  as you can see from the pictures <unk> both noam and i had an early fascination with first principles <unk> and over the years <unk> as our knowledge of science and technology became more sophisticated this early awe with the basics has only intensified <unk>  so it 's not surprising that about twelve years ago when noam noam and i were already computer science professors <unk>  we were equally frustrated by the same phenomenon <unk>  as computers became increasingly more complex our students were losing the forest for the trees <unk>  and indeed it is impossible to connect with <unk> soul of the machine if you interact with a black box p c or a mac which is shrouded by numerous layers of closed proprietary software <unk>  so noam and i had this insight that if we want our students to understand how computers work  and understand it in the marrow of their bones then perhaps the best way to go about it is <unk> useful computer hardware and software from the ground up from first principles  now we had to start somewhere <unk> and so noam and i decided to base our cathedral <unk> so to speak on the simplest possible building block which is something called nand  <unk> so we now start this journey by telling our students that god gave us nand and told us to build a computer  and when we asked how god said one step at a time  and then following this advice <unk> we start with this lowly <unk> humble nand gate and we walk our students through an elaborate sequence of projects in which they gradually build <unk> set a hardware platform an assembler a virtual machine a basic operating system and a compiler for a simple  java like language that we call jack the students celebrate the end of this tour de force by using jack to write all sorts of cool games <unk> and tetris  you can imagine the tremendous joy of playing with a tetris game that you wrote in jack and then compiled into machine language in a compiler that you wrote also  and then seeing the result running on a machine that you built starting with nothing more than a few thousand nand gates it 's a tremendous personal triumph <unk> <unk> of going from first principles all the way to a fantastically complex and useful system noam and i worked five years to facilitate this ascent and to create the tools and infrastructure that will enable students to build it in one semester <unk>  and this is the great team that helped us make it happen the trick was to decompose the computer 's construction <unk> each of which could be individually specified built and unit tested in isolation from the rest of the project <unk>  and from day one noam and i decided to put all these building blocks freely available in open source on the web <unk>  so chip specifications <unk> of hundreds of slides <unk> lectures we laid out everything on the web and invited the world to come over take whatever they need <unk> and do whatever they want with it  and then something fascinating happened the world came <unk> and in short order thousands of people <unk> one of the first massive <unk> open online courses <unk>  although seven years ago we had no idea that what we were doing is called moocs <unk> we just observed how self organized courses were kind of spontaneously spawning out of our materials for example <unk> pramode c e an engineer from kerala india has organized groups of self learners who build our computer under his good guidance <unk> and parag shah <unk> another engineer from mumbai has unbundled our projects into smaller more manageable bites that he now serves in his pioneering do it yourself computer science program  the people who are attracted to these courses typically have a hacker mentality they want to figure <unk> out how things work and they want to do it in groups like this hackers club in washington d c that uses our materials to offer community courses <unk>  and because these materials are widely available and open source different people take them to very different and unpredictable directions <unk> for example <unk>  yu fangmin from guangzhou has used fpga technology to build our computer and show others how to do the same using a video clip and <unk> craddock developed a very nice computer game that unfolds inside our cpu architecture <unk>  which is quite a complex 3d maze that ben developed using the minecraft 3d simulator engine  the minecraft community went bananas over this project <unk> and ben became an <unk> if you will has turned into a life changing experience  for example <unk> take dan rounds who is a music and math major from east lansing <unk> michigan  a few weeks ago dan posted a victorious post on our website and i 'd like to read it to you  so here 's what <unk> i did the coursework because understanding computers is important to me just like literacy and numeracy  and i made it through i never worked harder on anything never been challenged to this degree <unk>  but given what i now feel capable of doing i would certainly do it again  to anyone considering nand2tetris it 's a tough journey <unk> but you 'll be profoundly changed <unk> who take this course off the web on their own traction on their own initiative <unk>  and it 's quite amazing because these people cannot care less about grades <unk> they are doing it because of one motivation only they have a tremendous <unk> and with that in mind i 'd like to say a few words about traditional college grading i 'm sick of it <unk> we are obsessed with grades because we are obsessed with data <unk> and yet grading takes away all the fun from failing <unk>  and a huge part of education is about failing <unk>  courage <unk> according <unk> is the ability to go from one defeat to another without losing enthusiasm and <unk> said that mistakes are the portals of discovery <unk>  and yet we don 't tolerate mistakes and we worship grades <unk> so we collect your b pluses and your a minuses and we aggregate them into a number like three point four <unk> which is stamped on your forehead and sums up who you are well in my opinion we went too far with this <unk> nonsense and grading became degrading <unk>  so with that i 'd like to say a few words about upgrading <unk> and share with you a glimpse from my current project  which is different from the previous one but it shares exactly the same characteristics of <unk> beginning with early age math <unk> and we do it on tablets because we believe that math like anything else should be taught hands on  so here 's what we do basically we developed numerous mobile apps every one of them explaining a particular concept in math <unk> so for example let 's take area when you deal with a concept like area well <unk> we also provide a set of tools that the child is invited to experiment with in order to learn <unk> so if area is what interests us then one thing which is natural to do is to tile the area of this particular shape and simply count how many tiles <unk> it takes to cover it completely <unk> and this little exercise here gives you a first good insight of the notion of area <unk> moving along what about the area of this figure <unk> well if you try to tile it it doesn 't work too well <unk> does it <unk> so instead <unk> you can experiment with these different tools here by some process of guided trial and error <unk>  and at some point you will <unk> discover that one thing that you can do among several legitimate transformations is the following one you can cut the figure <unk> you can rearrange the parts  you can glue them and then proceed to tile just like we did before  now this particular transformation did not change the area of the original figure <unk> so a six year old who plays with this has just discovered a clever algorithm to compute the area of any given parallelogram  we don 't replace teachers by the way we believe that teachers should be empowered not replaced moving along what about the area of a triangle <unk>  so after some guided trial and error the child will discover with or without help <unk> that he or she can duplicate the original figure and then take the result <unk> transpose it glue it to the original and then proceed [ with ] what we did before cut rearrange paste oops paste and glue and tile now this transformation has doubled the area of the <unk> original figure and therefore we have just learned that the area of the triangle equals the area of this rectangle divided by two <unk>  but we discovered it by <unk> self exploration  so  in addition to learning some useful geometry the child has been exposed to some pretty sophisticated science strategies <unk> reduction <unk> which is the the art of transforming a complex problem into a simple one or generalization which is at the heart of any scientific discipline or the fact that some properties are invariant under some transformations and all this is something that a very young child can pick up using such mobile apps so presently <unk> we are doing the following first of all we are decomposing the k 12 math curriculum into numerous such apps <unk>  and because we cannot do it on our own <unk> we 've developed a very fancy authoring tool that any author any parent or actually anyone <unk> interest in math education can use this authoring tool to develop similar apps on tablets without programming <unk> and finally we are putting together an adaptive ecosystem that will match different learners with different apps according to their evolving learning style